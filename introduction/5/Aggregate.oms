val i = Val[Double]
val j = Val[Double]
val k = Val[Double]
val avg = Val[Double]

val by2 = 
  ScalaTask("val j = i * 2") set (
    inputs += i,
    outputs += (i, j),
    i := 10.0
  )

val plus1 = 
  ScalaTask("val k = j + 1") set (
    inputs += j,
    outputs += (j, k)
  )
  
val exploration = ExplorationTask(i in (0.0 to 100.0 by 2.0))

// This task compute the average value among an array of k
val average = 
  ScalaTask("val avg = k.average") set (
    inputs += k.toArray,
    outputs += avg
  )

// The ">-" transition waits for the completion of all execution streams. 
// Then it generates an array of values containing all the values of "k"
// generated by the executions of the task "plus1" and launches "average".
exploration -< by2 -- plus1 >- (average hook ToStringHook())
