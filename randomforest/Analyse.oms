import Learn._

val accuracy = Val[Double]

val parsing =
  ScalaTask("val accuracy = learningOutput.lines.toSeq.head.toDouble") set (
    inputs += learningOutput,
    outputs += accuracy
  )

val accuracyAverage = Val[Double]  
val accuracyMedian = Val[Double]
val accuracyMSE = Val[Double]

val stat =
  ScalaTask("""
  |val accuracyAverage = accuracy.average
  |val accuracyMedian = accuracy.median
  |val accuracyMSE = accuracy.meanSquaredError
  """.stripMargin) set (
    inputs += (nbTrees, treeDepth, accuracy.toArray),
    outputs += (nbTrees, treeDepth, accuracyAverage, accuracyMedian, accuracyMSE)
  )
  
val resultHook = 
  AppendToCSVFileHook(
    workDirectory / "analysed.csv",
    nbTrees, treeDepth, accuracyAverage, accuracyMedian, accuracyMSE)
    
val imageExplorationCapsule = Capsule(imagesExploration)
val statSlot = Slot(stat)

(parameterExploration -< imageExplorationCapsule -< learning -- parsing >- statSlot) + 
  (imageExplorationCapsule -- (statSlot hook resultHook))
  
